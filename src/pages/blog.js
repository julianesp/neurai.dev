import React from 'react'
import Layout from '../components/Layout'
import styles from '../styles/Blog.module.scss'
import Head from 'next/head'
import Link from 'next/link'
import Image from 'next/image'
import ibero from '../assets/img/logos/ibero.png'

const blog = () => {
    return (
        <Layout>
            <Head>
                <title>Blog</title>
            </Head>


            <section className={styles.container}>
                <header>
                    <nav>
                        <ul>
                            <Link href="#intro" className={styles.enlace}>
                                Inicio
                            </Link>

                            <Link href="#para" className={styles.enlace}>
                                Paradigmas
                            </Link>

                            <Link href="#lan" className={styles.enlace}>
                                Lenguajes
                            </Link>

                            <Image
                                alt='Logo Universidad'
                                src={ibero}
                                className={styles.enlace__img}
                            // width={20}
                            // height={20}
                            />

                        </ul>
                    </nav>
                </header>

                <h1>La calidad, ¬øde qu√© sirve en la industria del software?</h1>

                <article className={styles.temas}>
                    <p id="intro">
                        Adem√°s de permitirnos innovar cada vez m√°s r√°pido a trav√©s de la rob√≥tica, por ejemplo, el desarrollo de software ha sido una forma para que cualquier persona pueda trabajar siempre y cuando sea disciplinada y se mantenga en constante actualizaci√≥n.
                    </p>
                    <br />
                    <p id="intro">
                        Para todo trabajo o bien sea que tomes el desarrollo de software como tu hobbie <span><i>(por gusto)</i></span>, este debe ser creado con un fin espec√≠fico y aplicando estructuras para que el sistema sea robusto y as√≠, evitar futuros fallos, aunque no se debe menospreciar que habr√°n errores, porque los habr√°n, hasta las compa√±√≠as m√°s avanzadas en este campo han tenido fallos, sin embargo, esto hace que el equipo crezca al estar comprometidos en encontrar y solucionar ese fallo o punto y coma (;) que nos causa tanto estr√©s üòÖ
                    </p>
                </article>

                <article className={styles.temas}>
                    <button id="para">
                        <h2>¬øQu√© es paradigma?</h2>
                    </button>
                    <p>
                        Hay diferentes tipos de paradigma que se pueden aplicar al desarrollo
                        de software y todos tienen un enfoque diferente, sin embargo,
                        todos comparten el mismo fin, crear la soluci√≥n para problemas a
                        trav√©s del desarrollo de software.
                        <br /><br />
                        A continuaci√≥n har√© una breve descripci√≥n de los paradigmas m√°s
                        utilizados:
                        <br /><br />
                    </p>

                    <ul className={styles.paradigmas}>
                        <li>

                            Programaci√≥n estructurada: este paradigma se centra en
                            descomponer o modularizar
                            <span>(dividir el problema en peque√±as partes),</span>
                            para facilitar el mantenimiento y reutilizaci√≥n del c√≥digo

                        </li>
                        <li>
                            <p>
                                Programaci√≥n Orientada a Objetos: este paradigma es utilizado
                                para para sistemas de mayor complejidad ya que se requiere
                                manejar datos y de la misma manera, se debe protegerlos aplicando
                                encapsulamiento <span>(uno de las cuatro caracter√≠sticas por
                                    las que se caracteriza √©ste paradigma)</span>
                            </p>
                        </li>
                        <li>
                            <p>
                                Programaci√≥n funcional: as√≠ mismo como lo dice su nombre, en √©ste
                                paradigma se dividen las tareas en funciones, de esta manera,
                                las funciones se podr√°n usar en m√°s ejercicios similares
                            </p>
                        </li>
                        <li>
                            <p>
                                Programaci√≥n declarativa: centrado en el resultado final en el cual
                                el desarrollador se encarga de especificar el c√≥digo de lo que
                                quiere obtener
                            </p>
                        </li>
                    </ul>

                </article>

                <article className={styles.temas}>
                    <h2>
                        <button id="lan">
                            <h2>¬øQu√© es lenguaje de programaci√≥n?</h2>
                        </button>
                    </h2>
                    <p>
                        Gracias a los lenguajes de programaci√≥n es que podemos comunicarnos con
                        las m√°quinas <span>(procesador, disco duro, RAM, etc)</span>
                        a trav√©s de c√≥digo entendible para nosotros los humanos y de esta manera
                        podemos dar √≥rdenes que ser√°n ejecutadas por el software que se est√°
                        creando, de la misma manera, tambi√©n se puede enviar este conjunto de
                        √≥rdenes a dispositivos f√≠sicos o hardware, m√°s conocidos como robots
                        que en la actualidad est√°n haciendo m√°s presencia gracias al uso de la
                        Inteligencia Artificial, <a href="https://www.youtube.com/watch?v=Hsv6cmDdt5g" target="_blank"
                            title="Abrir enlace de Youtube">
                            <span>Soph√≠a</span></a> es un ejemplo de esto.
                    </p>


                    <h3>Lenguajes utilizados en los paradigmas</h3>
                    <ul className={styles.lenguajes}>
                        <li>
                            Programaci√≥n estructurada: C, Pascal, Algol, Fortran, BASIC
                        </li>
                        <li>
                            Programaci√≥n Orientada a Objetos: Java, C++, Python, Ruby
                        </li>
                        <li>
                            Programaci√≥n Funcional: Haskell, Lisp, ML, Erlang, Scala
                        </li>
                        <li>
                            Programaci√≥n declarativa: SQL, Prolog, Erlang
                        </li>
                    </ul>
                </article>

            </section>

            <footer className={styles.conclusion}>
                <h1>Conclusi√≥n</h1>
                <p>
                    Como futuro ingeniero de software, debo estar enterado de todo lo relacionado con la estructuraci√≥n de los sistemas que ser√°n usados por las personas y tratar de que sean de f√°cil uso para ellos, es por esta raz√≥n que no debo construir sistemas complejos que solamente los entienda otro ingeniero de software. Los sistemas deben estar pensados para que hasta un ni√±o que a√∫n no puede leer, entienda para qu√© sirve el sitio web.
                </p>
                <p>
                    Juli√°n Espa√±a Riobamba
                </p>
            </footer>
        </Layout>

    )
}

export default blog